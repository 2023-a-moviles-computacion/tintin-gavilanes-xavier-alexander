// Generated by view binder compiler. Do not edit!
package com.example.examen.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.examen.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRvHeladeriaBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnBorrar;

  @NonNull
  public final Button btnCrear;

  @NonNull
  public final CardView cvHeladeria;

  @NonNull
  public final TextView tvCodigoHeladeria;

  @NonNull
  public final TextView tvDescripcion;

  @NonNull
  public final TextView tvHeladeria;

  @NonNull
  public final TextView tvPrecio;

  @NonNull
  public final TextView tvSabor;

  private ItemRvHeladeriaBinding(@NonNull LinearLayout rootView, @NonNull Button btnBorrar,
      @NonNull Button btnCrear, @NonNull CardView cvHeladeria, @NonNull TextView tvCodigoHeladeria,
      @NonNull TextView tvDescripcion, @NonNull TextView tvHeladeria, @NonNull TextView tvPrecio,
      @NonNull TextView tvSabor) {
    this.rootView = rootView;
    this.btnBorrar = btnBorrar;
    this.btnCrear = btnCrear;
    this.cvHeladeria = cvHeladeria;
    this.tvCodigoHeladeria = tvCodigoHeladeria;
    this.tvDescripcion = tvDescripcion;
    this.tvHeladeria = tvHeladeria;
    this.tvPrecio = tvPrecio;
    this.tvSabor = tvSabor;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRvHeladeriaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRvHeladeriaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_rv_heladeria, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRvHeladeriaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBorrar;
      Button btnBorrar = ViewBindings.findChildViewById(rootView, id);
      if (btnBorrar == null) {
        break missingId;
      }

      id = R.id.btnCrear;
      Button btnCrear = ViewBindings.findChildViewById(rootView, id);
      if (btnCrear == null) {
        break missingId;
      }

      id = R.id.cvHeladeria;
      CardView cvHeladeria = ViewBindings.findChildViewById(rootView, id);
      if (cvHeladeria == null) {
        break missingId;
      }

      id = R.id.tvCodigoHeladeria;
      TextView tvCodigoHeladeria = ViewBindings.findChildViewById(rootView, id);
      if (tvCodigoHeladeria == null) {
        break missingId;
      }

      id = R.id.tvDescripcion;
      TextView tvDescripcion = ViewBindings.findChildViewById(rootView, id);
      if (tvDescripcion == null) {
        break missingId;
      }

      id = R.id.tvHeladeria;
      TextView tvHeladeria = ViewBindings.findChildViewById(rootView, id);
      if (tvHeladeria == null) {
        break missingId;
      }

      id = R.id.tvPrecio;
      TextView tvPrecio = ViewBindings.findChildViewById(rootView, id);
      if (tvPrecio == null) {
        break missingId;
      }

      id = R.id.tvSabor;
      TextView tvSabor = ViewBindings.findChildViewById(rootView, id);
      if (tvSabor == null) {
        break missingId;
      }

      return new ItemRvHeladeriaBinding((LinearLayout) rootView, btnBorrar, btnCrear, cvHeladeria,
          tvCodigoHeladeria, tvDescripcion, tvHeladeria, tvPrecio, tvSabor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
